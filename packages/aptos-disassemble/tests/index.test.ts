import { describe, it, expect } from "vitest";
import { disassemble_to_string } from "../src/index";
import { bcs, Deserializer } from "aptos-bcs";
import * as fs from "fs";
import {
  type SignatureToken,
  load_signature_token,
  Constant,
  Metadata,
  StructDefinition,
  FieldDefinition,
  VariantDefinition,
  StructDefInstantiation,
  Visibility,
  CodeUnit,
  load_code,
  FunctionDefinition,
  FieldHandle,
  FieldInstantiation,
  ModuleHandle,
  VariantFieldHandle,
  VariantFieldInstantiation,
  StructVariantHandle,
  StructVariantInstantiation,
  disassembleMoveModule,
} from "../src/types";
describe("disassembleMoveModule", () => {
  it("should return not implemented message", () => {
    const module = Buffer.from(
      "0xa11ceb0b0700000a0d01001c021c2c0348ec0104b4021a05ce02da0107a804f00808980d2006b80d4410fc0ddd030ad911590cb2129e060dd018140fe4180200000006000f001c001f002100250028002a002e00350039003f0048000108000105040106010007070000090600000a0800020e0402030100010010060000180600062707010000001b00010001031d02010001021e0104020304010420020601060105220808000100230901000100240a0800010626010c01000107290d010001082b01080001082c01010001032d02010001092f0e08000106300f0c010001013110080106010032110100010933120100010834010800010a290801000105360808000109370e1300010038150100010b3a01010001003b16010001023c191302030001023d1a1b02030001023e1c01020300010c401d01000101411e010106010042200100010c43010800010044010800010045010800010046210100010047000100010d4901130001014a0f01010601020303050307070b07080d080e05180319031a031c0524221c0702060c030001060c020e0802010b050209000901010802010b010109000108030103080c050303050a030a020308060c050303050a030a0203010a02010b0801090004060c03030b08010a02010501090001060b0101090003060c070b010108020802020b0801030a03010104010b0801030708000802090c050303050a030a02030b08010a02010c01020107080002060b050209000901090002070b050209000901090001090103070b0502090009010900090103060c050302070b010109000900020708040e02060c0502060c0e0108070307080003070305626c6f636b0d426c6f636b5265736f75726365066865696768740e65706f63685f696e74657276616c106e65775f626c6f636b5f6576656e74730b4576656e7448616e646c65056576656e740d4e6577426c6f636b4576656e741c7570646174655f65706f63685f696e74657276616c5f6576656e74731855706461746545706f6368496e74657276616c4576656e740d436f6d6d6974486973746f72790c6d61785f6361706163697479086e6578745f696478057461626c650f5461626c65576974684c656e677468117461626c655f776974685f6c656e677468084e6577426c6f636b04686173680565706f636805726f756e641b70726576696f75735f626c6f636b5f766f7465735f6269747665630870726f706f736572176661696c65645f70726f706f7365725f696e64696365731174696d655f6d6963726f7365636f6e64731355706461746545706f6368496e74657276616c126f6c645f65706f63685f696e74657276616c126e65775f65706f63685f696e74657276616c0a696e697469616c697a651073797374656d5f616464726573736573166173736572745f6170746f735f6672616d65776f726b036e6577076163636f756e74106e65775f6576656e745f68616e646c65056572726f7210696e76616c69645f617267756d656e740e626c6f636b5f70726f6c6f67756515626c6f636b5f70726f6c6f6775655f636f6d6d6f6e066f7074696f6e046e6f6e65064f7074696f6e0a72616e646f6d6e6573730c6f6e5f6e65775f626c6f636b0f7265636f6e66696775726174696f6e196c6173745f7265636f6e66696775726174696f6e5f74696d650b7265636f6e666967757265096173736572745f766d057374616b65136765745f76616c696461746f725f696e64657804736f6d6507636f756e74657214656d69745f6e65775f626c6f636b5f6576656e741d7570646174655f706572666f726d616e63655f737461746973746963730d63757272656e745f65706f63680d73746174655f73746f72616765117065726d697373696f6e5f64656e6965641a69735f63757272656e745f65706f63685f76616c696461746f7212626c6f636b5f70726f6c6f6775655f657874187265636f6e66696775726174696f6e5f776974685f646b67097472795f737461727418656d69745f67656e657369735f626c6f636b5f6576656e7408636f6e7461696e730672656d6f7665036164640974696d657374616d70127570646174655f676c6f62616c5f74696d650a656d69745f6576656e7419656d69745f77726974657365745f626c6f636b5f6576656e74106e6f775f6d6963726f7365636f6e6473186765745f63757272656e745f626c6f636b5f686569676874176765745f65706f63685f696e74657276616c5f7365637319696e697469616c697a655f636f6d6d69745f686973746f72791f7570646174655f65706f63685f696e74657276616c5f6d6963726f736563730866656174757265731e6d6f64756c655f6576656e745f6d6967726174696f6e5f656e61626c656404656d69740767656e657369730000000000000000000000000000000000000000000000000000000000000001052000000000000000000000000000000000000000000000000000000000000000000520000000000000000000000000000000000000000000000000000000000000000114636f6d70696c6174696f6e5f6d65746164617461090003322e3003322e31126170746f733a3a6d657461646174615f7631a90303010000000000000031454e554d5f4e45575f424c4f434b5f4556454e54535f444f45535f4e4f545f4d415443485f424c4f434b5f48454947485447546865206e756d626572206f66206e657720626c6f636b206576656e747320646f6573206e6f7420657175616c207468652063757272656e7420626c6f636b206865696768742e02000000000000001145494e56414c49445f50524f504f5345525c416e20696e76616c69642070726f706f736572207761732070726f76696465642e204578706563746564207468652070726f706f73657220746f2062652074686520564d206f7220616e206163746976652076616c696461746f722e030000000000000012455a45524f5f4d41585f434150414349545937546865206d6178696d756d206361706163697479206f662074686520636f6d6d697420686973746f72792063616e6e6f7420626520302e02084e6577426c6f636b0104001355706461746545706f6368496e74657276616c01040002176765745f65706f63685f696e74657276616c5f73656373010100186765745f63757272656e745f626c6f636b5f68656967687401010000020402030303040b01010802080b010108030402030b0e0c0e0d0b05020e08020602081105120313030203140a021505160a0317030202081105120313030203140a021505160a03170307020219031a0303020219031a0300030000011b0a0011010a010600000000000000002404160a0049d00700004900000000380012012d010a000600000000000000000b010a0038010b00380212002d00020b000106030000000000000011042705000002000108180e000b010a020a030b040b050b060a0711060c080e000b020b03380311080b071109170b082603160517110a0206000002000114410a00110b0a04070021043d080c080b08043838040c090a04070022031105150a04110c38050c0907012a000c0a0a0a100038060a0a0f01150b010b020b030a0a1001140b060b040a050b0712030c0b0b000a0a0f000b0b110f0b090b051110111111120b0a100214020b00010602000000000000001113270a0411140c08050815000002000108180e000b010a020a030b040b050b060a0711060c090e000b020b030b0811080b071109170b092603160517111602170000020001181107012a000c010e000b010f000700060000000000000000060000000000000000060000000000000000401700000000000000000700400800000000000000000600000000000000001203110f020f000001011f3f070129010304052607012a010c030a031003140c040a0310040a043807031105160a030f040a043808010a030f040a040a023809280b044901000000160a03100514190b030f03150b000e021006140e02100714111b0a012e38060e0210081421043a0b010b02380a020b01010601000000000000001104271d0100020001181b0a00110b07012a000c020a02100038060a020f01150b000a020f000b01111106ffffffffffffffff0b0210011440170000000000000000070040080000000000000000111e1203110f021f01000100010507012b00100114022001000100010707012b001002140640420f00000000001a022101000001100a01490000000024040b0b000b014900000000380012012d01020b0001060300000000000000110427220100010023260b0011010a0106000000000000000024042307012a000c020a021002140c030a020f020c040a010b04151123041c0b02010b030b011204380b020b020f090b030b011205380c051b0603000000000000001104270002000000010101010201000305030703030003004b00".replace(
        "0x",
        ""
      ),
      "hex"
    );
    // console.log(disassembleMoveModule(module));

    // console.log('Module Handles:', module_handles);
    // console.log('Struct Handles:', struct_handles);
    // console.log('Function Handles:', function_handles);
    // console.log('Function Inst:', function_inst);
    // console.log('Signatures:', signatures);
    // console.log('Constant Pool:', constant_pool);
    // console.log('Identifiers:', identifiers);
    // console.log('Address Identifiers:', address_identifiers);
    // console.log('Metadatas:', metadatas.map(m => ({
    //     key: Buffer.from(m.key).toString('utf-8'),
    //     value: m.value
    // })));

    // console.log('Function Definitions:', function_defs);
    // console.log('Struct Definitions:', struct_defs);
    // console.log('Field Definitions:', field_defs);
    // console.log('Field Instantiations:', field_insts);
    // console.log('Friend Declarations:', friend_decls);
    // console.log('Variant Field Handles:', variant_field_handles);
    // console.log('Variant Field Instantiations:', variant_field_inst);
    // console.log('Struct Variant Handles:', struct_variant_handles);
    // console.log('Struct Variant Instantiations:', struct_variant_inst);
  });

  it("test use url", async () => {
    // curl --request GET \
    // --url https://api.mainnet.aptoslabs.com/v1/accounts/0x1/modules
    const result =  await (await fetch('https://api.mainnet.aptoslabs.com/v1/accounts/0x1/modules')).json();
    for (const module of result) {
        const bytecode = Buffer.from((module.bytecode as string).replace(/^0x/i, ''), 'hex');
        console.log('Module Name:', module.abi.name);
        const disassembled = disassembleMoveModule(bytecode);
        expect(disassembled).toMatchSnapshot();
        expect(disassemble_to_string(bytecode)).toMatchSnapshot();
    }
  });

  it("test string", () => {
    const module = Buffer.from(
      "0xa11ceb0b0700000a0d01001c021c2c0348ec0104b4021a05ce02da0107a804f00808980d2006b80d4410fc0ddd030ad911590cb2129e060dd018140fe4180200000006000f001c001f002100250028002a002e00350039003f0048000108000105040106010007070000090600000a0800020e0402030100010010060000180600062707010000001b00010001031d02010001021e0104020304010420020601060105220808000100230901000100240a0800010626010c01000107290d010001082b01080001082c01010001032d02010001092f0e08000106300f0c010001013110080106010032110100010933120100010834010800010a290801000105360808000109370e1300010038150100010b3a01010001003b16010001023c191302030001023d1a1b02030001023e1c01020300010c401d01000101411e010106010042200100010c43010800010044010800010045010800010046210100010047000100010d4901130001014a0f01010601020303050307070b07080d080e05180319031a031c0524221c0702060c030001060c020e0802010b050209000901010802010b010109000108030103080c050303050a030a020308060c050303050a030a0203010a02010b0801090004060c03030b08010a02010501090001060b0101090003060c070b010108020802020b0801030a03010104010b0801030708000802090c050303050a030a02030b08010a02010c01020107080002060b050209000901090002070b050209000901090001090103070b0502090009010900090103060c050302070b010109000900020708040e02060c0502060c0e0108070307080003070305626c6f636b0d426c6f636b5265736f75726365066865696768740e65706f63685f696e74657276616c106e65775f626c6f636b5f6576656e74730b4576656e7448616e646c65056576656e740d4e6577426c6f636b4576656e741c7570646174655f65706f63685f696e74657276616c5f6576656e74731855706461746545706f6368496e74657276616c4576656e740d436f6d6d6974486973746f72790c6d61785f6361706163697479086e6578745f696478057461626c650f5461626c65576974684c656e677468117461626c655f776974685f6c656e677468084e6577426c6f636b04686173680565706f636805726f756e641b70726576696f75735f626c6f636b5f766f7465735f6269747665630870726f706f736572176661696c65645f70726f706f7365725f696e64696365731174696d655f6d6963726f7365636f6e64731355706461746545706f6368496e74657276616c126f6c645f65706f63685f696e74657276616c126e65775f65706f63685f696e74657276616c0a696e697469616c697a651073797374656d5f616464726573736573166173736572745f6170746f735f6672616d65776f726b036e6577076163636f756e74106e65775f6576656e745f68616e646c65056572726f7210696e76616c69645f617267756d656e740e626c6f636b5f70726f6c6f67756515626c6f636b5f70726f6c6f6775655f636f6d6d6f6e066f7074696f6e046e6f6e65064f7074696f6e0a72616e646f6d6e6573730c6f6e5f6e65775f626c6f636b0f7265636f6e66696775726174696f6e196c6173745f7265636f6e66696775726174696f6e5f74696d650b7265636f6e666967757265096173736572745f766d057374616b65136765745f76616c696461746f725f696e64657804736f6d6507636f756e74657214656d69745f6e65775f626c6f636b5f6576656e741d7570646174655f706572666f726d616e63655f737461746973746963730d63757272656e745f65706f63680d73746174655f73746f72616765117065726d697373696f6e5f64656e6965641a69735f63757272656e745f65706f63685f76616c696461746f7212626c6f636b5f70726f6c6f6775655f657874187265636f6e66696775726174696f6e5f776974685f646b67097472795f737461727418656d69745f67656e657369735f626c6f636b5f6576656e7408636f6e7461696e730672656d6f7665036164640974696d657374616d70127570646174655f676c6f62616c5f74696d650a656d69745f6576656e7419656d69745f77726974657365745f626c6f636b5f6576656e74106e6f775f6d6963726f7365636f6e6473186765745f63757272656e745f626c6f636b5f686569676874176765745f65706f63685f696e74657276616c5f7365637319696e697469616c697a655f636f6d6d69745f686973746f72791f7570646174655f65706f63685f696e74657276616c5f6d6963726f736563730866656174757265731e6d6f64756c655f6576656e745f6d6967726174696f6e5f656e61626c656404656d69740767656e657369730000000000000000000000000000000000000000000000000000000000000001052000000000000000000000000000000000000000000000000000000000000000000520000000000000000000000000000000000000000000000000000000000000000114636f6d70696c6174696f6e5f6d65746164617461090003322e3003322e31126170746f733a3a6d657461646174615f7631a90303010000000000000031454e554d5f4e45575f424c4f434b5f4556454e54535f444f45535f4e4f545f4d415443485f424c4f434b5f48454947485447546865206e756d626572206f66206e657720626c6f636b206576656e747320646f6573206e6f7420657175616c207468652063757272656e7420626c6f636b206865696768742e02000000000000001145494e56414c49445f50524f504f5345525c416e20696e76616c69642070726f706f736572207761732070726f76696465642e204578706563746564207468652070726f706f73657220746f2062652074686520564d206f7220616e206163746976652076616c696461746f722e030000000000000012455a45524f5f4d41585f434150414349545937546865206d6178696d756d206361706163697479206f662074686520636f6d6d697420686973746f72792063616e6e6f7420626520302e02084e6577426c6f636b0104001355706461746545706f6368496e74657276616c01040002176765745f65706f63685f696e74657276616c5f73656373010100186765745f63757272656e745f626c6f636b5f68656967687401010000020402030303040b01010802080b010108030402030b0e0c0e0d0b05020e08020602081105120313030203140a021505160a0317030202081105120313030203140a021505160a03170307020219031a0303020219031a0300030000011b0a0011010a010600000000000000002404160a0049d00700004900000000380012012d010a000600000000000000000b010a0038010b00380212002d00020b000106030000000000000011042705000002000108180e000b010a020a030b040b050b060a0711060c080e000b020b03380311080b071109170b082603160517110a0206000002000114410a00110b0a04070021043d080c080b08043838040c090a04070022031105150a04110c38050c0907012a000c0a0a0a100038060a0a0f01150b010b020b030a0a1001140b060b040a050b0712030c0b0b000a0a0f000b0b110f0b090b051110111111120b0a100214020b00010602000000000000001113270a0411140c08050815000002000108180e000b010a020a030b040b050b060a0711060c090e000b020b030b0811080b071109170b092603160517111602170000020001181107012a000c010e000b010f000700060000000000000000060000000000000000060000000000000000401700000000000000000700400800000000000000000600000000000000001203110f020f000001011f3f070129010304052607012a010c030a031003140c040a0310040a043807031105160a030f040a043808010a030f040a040a023809280b044901000000160a03100514190b030f03150b000e021006140e02100714111b0a012e38060e0210081421043a0b010b02380a020b01010601000000000000001104271d0100020001181b0a00110b07012a000c020a02100038060a020f01150b000a020f000b01111106ffffffffffffffff0b0210011440170000000000000000070040080000000000000000111e1203110f021f01000100010507012b00100114022001000100010707012b001002140640420f00000000001a022101000001100a01490000000024040b0b000b014900000000380012012d01020b0001060300000000000000110427220100010023260b0011010a0106000000000000000024042307012a000c020a021002140c030a020f020c040a010b04151123041c0b02010b030b011204380b020b020f090b030b011205380c051b0603000000000000001104270002000000010101010201000305030703030003004b00".replace(
        "0x",
        ""
      ),
      "hex"
    );

    /*
                { module: 0, name: 1, abilities: 8, type_parameters: [] },
                { module: 1, name: 5, abilities: 4, type_parameters: [Array] },
                { module: 0, name: 7, abilities: 7, type_parameters: [] },
                { module: 0, name: 9, abilities: 6, type_parameters: [] },
                { module: 0, name: 10, abilities: 8, type_parameters: [] },
                { module: 2, name: 14, abilities: 4, type_parameters: [Array] },
                { module: 0, name: 16, abilities: 6, type_parameters: [] },
                { module: 0, name: 24, abilities: 6, type_parameters: [] },
                { module: 6, name: 39, abilities: 7, type_parameters: [Array] }
            */

    const result = disassembleMoveModule(module);
    expect(result).toMatchSnapshot();
    const disassembledString = disassemble_to_string(module);
    expect(disassembledString).toMatchSnapshot();
  });

  it("test string with metadata", () => {
    let i = "";
    const module = Buffer.from(i.replace(/0x/g, ''), 'hex');
    const result = disassemble_to_string(module, {
      printBasicBlocks: true,
    })
    // 输出到文件
    fs.writeFileSync('./disassembled_output.txt', result);
  });
});
